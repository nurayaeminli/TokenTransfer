{
	"id": "c87e2d04c8a0d77453561489cca932cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Transfer&approve.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.24;\r\nimport 'zeppelin-solidity/contracts/token/ERC20/StandardToken.sol';\r\ncontract transfer_approve {\r\n    StandardToken public token;\r\n    address public owner;\r\n    address public wallet;\r\n    uint amount;\r\n    function gettoken(address token, address owner) public {\r\n     token = StandardToken(token);\r\n     owner = owner;\r\n    }\r\n    function transfer(address wallet, uint amount) public {\r\n        require(amount > 0);\r\n        token.transferFrom(owner, msg.sender, amount);\r\n    }\r\n}\r\n\r\n"
			},
			"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol": {
				"content": "pragma solidity ^0.4.24;\n\nimport \"./BasicToken.sol\";\nimport \"./ERC20.sol\";\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/issues/20\n * Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    returns (bool)\n  {\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n    require(_to != address(0));\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(\n    address _spender,\n    uint256 _addedValue\n  )\n    public\n    returns (bool)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(\n    address _spender,\n    uint256 _subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    uint256 oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue >= oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n"
			},
			"zeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
				"content": "pragma solidity ^0.4.24;\n\nimport \"./ERC20Basic.sol\";\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address _owner, address _spender)\n    public view returns (uint256);\n\n  function transferFrom(address _from, address _to, uint256 _value)\n    public returns (bool);\n\n  function approve(address _spender, uint256 _value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n"
			},
			"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol": {
				"content": "pragma solidity ^0.4.24;\n\n\nimport \"./ERC20Basic.sol\";\nimport \"../../math/SafeMath.sol\";\n\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) internal balances;\n\n  uint256 internal totalSupply_;\n\n  /**\n  * @dev Total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_value <= balances[msg.sender]);\n    require(_to != address(0));\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n}\n"
			},
			"zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
				"content": "pragma solidity ^0.4.24;\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address _who) public view returns (uint256);\n  function transfer(address _to, uint256 _value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n"
			},
			"zeppelin-solidity/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.4.24;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (_a == 0) {\n      return 0;\n    }\n\n    c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = _a / _b;\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n    return _a / _b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    c = _a + _b;\n    assert(c >= _a);\n    return c;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Transfer&approve.sol": {
				"transfer_approve": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "token",
									"type": "address"
								},
								{
									"name": "owner",
									"type": "address"
								}
							],
							"name": "gettoken",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "wallet",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Transfer&approve.sol\":128:544  contract transfer_approve {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Transfer&approve.sol\":128:544  contract transfer_approve {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Transfer&approve.sol\":128:544  contract transfer_approve {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x521eb273\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x88d06a18\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/Transfer&approve.sol\":221:242  address public wallet */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"contracts/Transfer&approve.sol\":221:242  address public wallet */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Transfer&approve.sol\":267:387  function gettoken(address token, address owner) public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"contracts/Transfer&approve.sol\":267:387  function gettoken(address token, address owner) public {\r... */\n      pop\n      tag_11\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_12)\n    tag_11:\n      stop\n        /* \"contracts/Transfer&approve.sol\":194:214  address public owner */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"contracts/Transfer&approve.sol\":194:214  address public owner */\n      pop\n      tag_14\n      jump(tag_15)\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Transfer&approve.sol\":393:541  function transfer(address wallet, uint amount) public {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"contracts/Transfer&approve.sol\":393:541  function transfer(address wallet, uint amount) public {\r... */\n      pop\n      tag_17\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_18)\n    tag_17:\n      stop\n        /* \"contracts/Transfer&approve.sol\":161:187  StandardToken public token */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"contracts/Transfer&approve.sol\":161:187  StandardToken public token */\n      pop\n      tag_20\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Transfer&approve.sol\":221:242  address public wallet */\n    tag_9:\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Transfer&approve.sol\":267:387  function gettoken(address token, address owner) public {\r... */\n    tag_12:\n        /* \"contracts/Transfer&approve.sol\":352:357  token */\n      dup2\n        /* \"contracts/Transfer&approve.sol\":330:358  token = StandardToken(token) */\n      swap2\n      pop\n        /* \"contracts/Transfer&approve.sol\":374:379  owner */\n      dup1\n        /* \"contracts/Transfer&approve.sol\":366:379  owner = owner */\n      swap1\n      pop\n        /* \"contracts/Transfer&approve.sol\":267:387  function gettoken(address token, address owner) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Transfer&approve.sol\":194:214  address public owner */\n    tag_15:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Transfer&approve.sol\":393:541  function transfer(address wallet, uint amount) public {\r... */\n    tag_18:\n        /* \"contracts/Transfer&approve.sol\":475:476  0 */\n      0x0\n        /* \"contracts/Transfer&approve.sol\":466:472  amount */\n      dup2\n        /* \"contracts/Transfer&approve.sol\":466:476  amount > 0 */\n      gt\n        /* \"contracts/Transfer&approve.sol\":458:477  require(amount > 0) */\n      iszero\n      iszero\n      tag_24\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_24:\n        /* \"contracts/Transfer&approve.sol\":488:493  token */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Transfer&approve.sol\":488:506  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Transfer&approve.sol\":507:512  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Transfer&approve.sol\":514:524  msg.sender */\n      caller\n        /* \"contracts/Transfer&approve.sol\":526:532  amount */\n      dup5\n        /* \"contracts/Transfer&approve.sol\":488:533  token.transferFrom(owner, msg.sender, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"contracts/Transfer&approve.sol\":488:533  token.transferFrom(owner, msg.sender, amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_26:\n        /* \"contracts/Transfer&approve.sol\":488:533  token.transferFrom(owner, msg.sender, amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"contracts/Transfer&approve.sol\":488:533  token.transferFrom(owner, msg.sender, amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Transfer&approve.sol\":393:541  function transfer(address wallet, uint amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Transfer&approve.sol\":161:187  StandardToken public token */\n    tag_21:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582002b55ce77cb6cce23088bfdad37c931074fc26684ce5691d462ebb691950c7350029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610437806100206000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063521eb2731461007257806388d06a18146100c95780638da5cb5b1461012c578063a9059cbb14610183578063fc0c546a146101d0575b600080fd5b34801561007e57600080fd5b50610087610227565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100d557600080fd5b5061012a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061024d565b005b34801561013857600080fd5b50610141610257565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018f57600080fd5b506101ce600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061027d565b005b3480156101dc57600080fd5b506101e56103e6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8191508090505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111151561028c57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103a657600080fd5b505af11580156103ba573d6000803e3d6000fd5b505050506040513d60208110156103d057600080fd5b8101908080519060200190929190505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a7230582002b55ce77cb6cce23088bfdad37c931074fc26684ce5691d462ebb691950c7350029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x437 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x521EB273 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x88D06A18 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1D0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP2 SWAP2 POP DUP1 SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MUL 0xb5 0x5c 0xe7 PUSH29 0xB6CCE23088BFDAD37C931074FC26684CE5691D462EBB691950C7350029 ",
							"sourceMap": "128:416:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;128:416:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063521eb2731461007257806388d06a18146100c95780638da5cb5b1461012c578063a9059cbb14610183578063fc0c546a146101d0575b600080fd5b34801561007e57600080fd5b50610087610227565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100d557600080fd5b5061012a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061024d565b005b34801561013857600080fd5b50610141610257565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018f57600080fd5b506101ce600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061027d565b005b3480156101dc57600080fd5b506101e56103e6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8191508090505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111151561028c57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103a657600080fd5b505af11580156103ba573d6000803e3d6000fd5b505050506040513d60208110156103d057600080fd5b8101908080519060200190929190505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a7230582002b55ce77cb6cce23088bfdad37c931074fc26684ce5691d462ebb691950c7350029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x521EB273 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x88D06A18 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1D0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP2 SWAP2 POP DUP1 SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MUL 0xb5 0x5c 0xe7 PUSH29 0xB6CCE23088BFDAD37C931074FC26684CE5691D462EBB691950C7350029 ",
							"sourceMap": "128:416:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;221:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;221:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;267:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;267:120:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;194:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;393:148;;8:9:-1;5:2;;;30:1;27;20:12;5:2;393:148:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;161:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;161:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;221:21;;;;;;;;;;;;;:::o;267:120::-;352:5;330:28;;374:5;366:13;;267:120;;:::o;194:20::-;;;;;;;;;;;;;:::o;393:148::-;475:1;466:6;:10;458:19;;;;;;;;488:5;;;;;;;;;;;:18;;;507:5;;;;;;;;;;;514:10;526:6;488:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;488:45:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;488:45:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;488:45:0;;;;;;;;;;;;;;;;;393:148;;:::o;161:26::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "215800",
								"executionCost": "257",
								"totalCost": "216057"
							},
							"external": {
								"gettoken(address,address)": "270",
								"owner()": "486",
								"token()": "530",
								"transfer(address,uint256)": "infinite",
								"wallet()": "442"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 544,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 128,
									"end": 544,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 128,
									"end": 544,
									"name": "MSTORE"
								},
								{
									"begin": 128,
									"end": 544,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 128,
									"end": 544,
									"name": "POP"
								},
								{
									"begin": 128,
									"end": 544,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 544,
									"name": "DUP1"
								},
								{
									"begin": 128,
									"end": 544,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 544,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 128,
									"end": 544,
									"name": "CODECOPY"
								},
								{
									"begin": 128,
									"end": 544,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 128,
									"end": 544,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582002b55ce77cb6cce23088bfdad37c931074fc26684ce5691d462ebb691950c7350029",
									".code": [
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "MSTORE"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "LT"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "JUMPI"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "DIV"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "521EB273"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "EQ"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "JUMPI"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "88D06A18"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "EQ"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "JUMPI"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "EQ"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "JUMPI"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "EQ"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "JUMPI"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "FC0C546A"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "EQ"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "JUMPI"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 544,
											"name": "REVERT"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "JUMPDEST"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "POP"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "JUMP"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "JUMPDEST"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "MLOAD"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "DUP3"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "AND"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "AND"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "DUP2"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "MSTORE"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "ADD"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "SWAP2"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "POP"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "POP"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "MLOAD"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "SWAP2"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "SUB"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "RETURN"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "JUMPDEST"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "POP"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "DUP1"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SUB"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "DUP2"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "ADD"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "DUP1"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "DUP1"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "AND"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "ADD"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SWAP3"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SWAP2"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "DUP1"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "AND"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "ADD"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SWAP3"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SWAP2"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "POP"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "POP"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "POP"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "JUMP"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "JUMPDEST"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "STOP"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "JUMP"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "DUP3"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "AND"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "AND"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "RETURN"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SUB"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "AND"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SWAP3"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SWAP3"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "JUMP"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "STOP"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "JUMPDEST"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "JUMP"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "JUMPDEST"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "MLOAD"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "AND"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "AND"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "ADD"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "SWAP2"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "MLOAD"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "SWAP2"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "SUB"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "SWAP1"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "RETURN"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "JUMPDEST"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "SLOAD"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "EXP"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "DIV"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "AND"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "DUP2"
										},
										{
											"begin": 221,
											"end": 242,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 330,
											"end": 358,
											"name": "SWAP2"
										},
										{
											"begin": 330,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 374,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 366,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 366,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "POP"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "POP"
										},
										{
											"begin": 267,
											"end": 387,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "SLOAD"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "EXP"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "DIV"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "AND"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 194,
											"end": 214,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 475,
											"end": 476,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 466,
											"end": 472,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 476,
											"name": "GT"
										},
										{
											"begin": 458,
											"end": 477,
											"name": "ISZERO"
										},
										{
											"begin": 458,
											"end": 477,
											"name": "ISZERO"
										},
										{
											"begin": 458,
											"end": 477,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 458,
											"end": 477,
											"name": "JUMPI"
										},
										{
											"begin": 458,
											"end": 477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 458,
											"end": 477,
											"name": "DUP1"
										},
										{
											"begin": 458,
											"end": 477,
											"name": "REVERT"
										},
										{
											"begin": 458,
											"end": 477,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 458,
											"end": 477,
											"name": "JUMPDEST"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "DUP1"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "SWAP1"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "SLOAD"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "SWAP1"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "EXP"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "SWAP1"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "DIV"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "AND"
										},
										{
											"begin": 488,
											"end": 506,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 506,
											"name": "AND"
										},
										{
											"begin": 488,
											"end": 506,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "SLOAD"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "EXP"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "DIV"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "AND"
										},
										{
											"begin": 514,
											"end": 524,
											"name": "CALLER"
										},
										{
											"begin": 526,
											"end": 532,
											"name": "DUP5"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "MLOAD"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP5"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "AND"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "MUL"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP2"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "MSTORE"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "ADD"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP1"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP5"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "AND"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "AND"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP2"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "MSTORE"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "ADD"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP4"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "AND"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "AND"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP2"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "MSTORE"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "ADD"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP3"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP2"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "MSTORE"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "ADD"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SWAP4"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "MLOAD"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP1"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP4"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SUB"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP2"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP8"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP1"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "GAS"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "CALL"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "MLOAD"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP2"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "ADD"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SWAP1"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP1"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP1"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "MLOAD"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SWAP1"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "ADD"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SWAP1"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SWAP3"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SWAP2"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SWAP1"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 541,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "JUMPDEST"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "SWAP1"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "SLOAD"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "SWAP1"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "EXP"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "SWAP1"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "DIV"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "AND"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 187,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"gettoken(address,address)": "88d06a18",
							"owner()": "8da5cb5b",
							"token()": "fc0c546a",
							"transfer(address,uint256)": "a9059cbb",
							"wallet()": "521eb273"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"gettoken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Transfer&approve.sol\":\"transfer_approve\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Transfer&approve.sol\":{\"keccak256\":\"0x0f191cfebb5fdb79ed13122d2b23c8d10cb54a767945fd43816702c8a6c244a0\",\"urls\":[\"bzzr://fe96cea3ac7dcf1b5e8d5299fd8b456a25d169f7f8507445f0da5111a1efb11f\"]},\"zeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1\",\"urls\":[\"bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22\"]},\"zeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]},\"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0xf98b4a9eed5064ef6fa47c3250121cf03f4f6528a20706d7b99e6c1dc9c1bb98\",\"urls\":[\"bzzr://7979b5eadacec799f6337581fdecb2f925ffb0f320fda4402bda043af1cbe706\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"zeppelin-solidity/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":117:1368  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":117:1368  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058200e2fe546f357fa4ec9e596e0f464c9fd4d26e005800b2d545ee9afe780a61fd80029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058200e2fe546f357fa4ec9e596e0f464c9fd4d26e005800b2d545ee9afe780a61fd80029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe 0x2f 0xe5 0x46 RETURN JUMPI STATICCALL 0x4e 0xc9 0xe5 SWAP7 0xe0 DELEGATECALL PUSH5 0xC9FD4D26E0 SDIV DUP1 SIGNEXTEND 0x2d SLOAD 0x5e 0xe9 0xaf 0xe7 DUP1 0xa6 0x1f 0xd8 STOP 0x29 ",
							"sourceMap": "117:1251:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058200e2fe546f357fa4ec9e596e0f464c9fd4d26e005800b2d545ee9afe780a61fd80029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe 0x2f 0xe5 0x46 RETURN JUMPI STATICCALL 0x4e 0xc9 0xe5 SWAP7 0xe0 DELEGATECALL PUSH5 0xC9FD4D26E0 SDIV DUP1 SIGNEXTEND 0x2d SLOAD 0x5e 0xe9 0xaf 0xe7 DUP1 0xa6 0x1f 0xd8 STOP 0x29 ",
							"sourceMap": "117:1251:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 1368,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1368,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058200e2fe546f357fa4ec9e596e0f464c9fd4d26e005800b2d545ee9afe780a61fd80029",
									".code": [
										{
											"begin": 117,
											"end": 1368,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 117,
											"end": 1368,
											"name": "ADDRESS"
										},
										{
											"begin": 117,
											"end": 1368,
											"name": "EQ"
										},
										{
											"begin": 117,
											"end": 1368,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 117,
											"end": 1368,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 117,
											"end": 1368,
											"name": "MSTORE"
										},
										{
											"begin": 117,
											"end": 1368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1368,
											"name": "DUP1"
										},
										{
											"begin": 117,
											"end": 1368,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"zeppelin-solidity/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"zeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol": {
				"BasicToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint256 representing the amount owned by the passed address."
							},
							"totalSupply()": {
								"details": "Total number of tokens in existence"
							},
							"transfer(address,uint256)": {
								"details": "Transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							}
						},
						"title": "Basic token"
					},
					"evm": {
						"assembly": "    /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":180:1251  contract BasicToken is ERC20Basic {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":180:1251  contract BasicToken is ERC20Basic {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":180:1251  contract BasicToken is ERC20Basic {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x18160ddd\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":389:472  function totalSupply() public view returns (uint256) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":389:472  function totalSupply() public view returns (uint256) {... */\n      pop\n      tag_6\n      jump(tag_7)\n    tag_6:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1149:1248  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1149:1248  function balanceOf(address _owner) public view returns (uint256) {... */\n      pop\n      tag_9\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":626:947  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":626:947  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      pop\n      tag_12\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_13)\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":389:472  function totalSupply() public view returns (uint256) {... */\n    tag_7:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":433:440  uint256 */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":455:467  totalSupply_ */\n      sload(0x1)\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":448:467  return totalSupply_ */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":389:472  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1149:1248  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_10:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1205:1212  uint256 */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1227:1235  balances */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1227:1243  balances[_owner] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1236:1242  _owner */\n      dup4\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1227:1243  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1220:1243  return balances[_owner] */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1149:1248  function balanceOf(address _owner) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":626:947  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_13:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":689:693  bool */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":719:727  balances */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":719:739  balances[msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":728:738  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":719:739  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":709:715  _value */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":709:739  _value <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":701:740  require(_value <= balances[msg.sender]) */\n      iszero\n      iszero\n      tag_17\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_17:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":769:770  0 */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":754:771  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":754:757  _to */\n      dup4\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":754:771  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":746:772  require(_to != address(0)) */\n      iszero\n      iszero\n      tag_18\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_18:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:834  balances[msg.sender].sub(_value) */\n      tag_19\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":827:833  _value */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:810  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:822  balances[msg.sender] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":811:821  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:822  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:826  balances[msg.sender].sub */\n      tag_20\n      swap1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:834  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_19:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":779:787  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":779:799  balances[msg.sender] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":788:798  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":779:799  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":779:834  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:881  balances[_to].add(_value) */\n      tag_21\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":874:880  _value */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:864  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:869  balances[_to] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":865:868  _to */\n      dup7\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:869  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:873  balances[_to].add */\n      tag_22\n      swap1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:881  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_21:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":840:848  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":840:853  balances[_to] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":849:852  _to */\n      dup6\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":840:853  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":840:881  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":913:916  _to */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":892:925  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":901:911  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":892:925  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":918:924  _value */\n      dup5\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":892:925  Transfer(msg.sender, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":938:942  true */\n      0x1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":931:942  return true */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":626:947  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1060:1176  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {... */\n    tag_20:\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1120:1127  uint256 */\n      0x0\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1148:1150  _a */\n      dup3\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1142:1144  _b */\n      dup3\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1142:1150  _b <= _a */\n      gt\n      iszero\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1135:1151  assert(_b <= _a) */\n      iszero\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1169:1171  _b */\n      dup2\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1164:1166  _a */\n      dup4\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1164:1171  _a - _b */\n      sub\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1157:1171  return _a - _b */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1060:1176  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1238:1366  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {... */\n    tag_22:\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1298:1307  uint256 c */\n      0x0\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1324:1326  _b */\n      dup2\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1319:1321  _a */\n      dup4\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1319:1326  _a + _b */\n      add\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1315:1326  c = _a + _b */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1344:1346  _a */\n      dup3\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1339:1340  c */\n      dup2\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1339:1346  c >= _a */\n      lt\n      iszero\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1332:1347  assert(c >= _a) */\n      iszero\n      iszero\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1360:1361  c */\n      dup1\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1353:1361  return c */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1238:1366  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820047c40f8644af6d765a53a178a41fbe3b57575ef51e2f2696073827571cd2ee70029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610416806100206000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57806370a0823114610087578063a9059cbb146100de575b600080fd5b34801561006857600080fd5b50610071610143565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061014d565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b50610129600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610195565b604051808215151515815260200191505060405180910390f35b6000600154905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156101e457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561022057600080fd5b610271826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103b590919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610304826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103ce90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008282111515156103c357fe5b818303905092915050565b600081830190508281101515156103e157fe5b809050929150505600a165627a7a72305820047c40f8644af6d765a53a178a41fbe3b57575ef51e2f2696073827571cd2ee70029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x416 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x271 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x304 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x3C3 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x3E1 JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DIV PUSH29 0x40F8644AF6D765A53A178A41FBE3B57575EF51E2F2696073827571CD2E 0xe7 STOP 0x29 ",
							"sourceMap": "180:1071:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;180:1071:2;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57806370a0823114610087578063a9059cbb146100de575b600080fd5b34801561006857600080fd5b50610071610143565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061014d565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b50610129600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610195565b604051808215151515815260200191505060405180910390f35b6000600154905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156101e457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561022057600080fd5b610271826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103b590919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610304826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103ce90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008282111515156103c357fe5b818303905092915050565b600081830190508281101515156103e157fe5b809050929150505600a165627a7a72305820047c40f8644af6d765a53a178a41fbe3b57575ef51e2f2696073827571cd2ee70029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x271 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x304 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x3C3 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x3E1 JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DIV PUSH29 0x40F8644AF6D765A53A178A41FBE3B57575EF51E2F2696073827571CD2E 0xe7 STOP 0x29 ",
							"sourceMap": "180:1071:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:2;;;;;;;;;;;;;;;;;;;;;;;1149:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:99:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;626:321;;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:321:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:83;433:7;455:12;;448:19;;389:83;:::o;1149:99::-;1205:7;1227:8;:16;1236:6;1227:16;;;;;;;;;;;;;;;;1220:23;;1149:99;;;:::o;626:321::-;689:4;719:8;:20;728:10;719:20;;;;;;;;;;;;;;;;709:6;:30;;701:39;;;;;;;;769:1;754:17;;:3;:17;;;;746:26;;;;;;;;802:32;827:6;802:8;:20;811:10;802:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;779:8;:20;788:10;779:20;;;;;;;;;;;;;;;:55;;;;856:25;874:6;856:8;:13;865:3;856:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;840:8;:13;849:3;840:13;;;;;;;;;;;;;;;:41;;;;913:3;892:33;;901:10;892:33;;;918:6;892:33;;;;;;;;;;;;;;;;;;938:4;931:11;;626:321;;;;:::o;1060:116:1:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;1238:128::-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "209200",
								"executionCost": "251",
								"totalCost": "209451"
							},
							"external": {
								"balanceOf(address)": "581",
								"totalSupply()": "402",
								"transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 1251,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 180,
									"end": 1251,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 180,
									"end": 1251,
									"name": "MSTORE"
								},
								{
									"begin": 180,
									"end": 1251,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 180,
									"end": 1251,
									"name": "POP"
								},
								{
									"begin": 180,
									"end": 1251,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 1251,
									"name": "DUP1"
								},
								{
									"begin": 180,
									"end": 1251,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 1251,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 180,
									"end": 1251,
									"name": "CODECOPY"
								},
								{
									"begin": 180,
									"end": 1251,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 180,
									"end": 1251,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820047c40f8644af6d765a53a178a41fbe3b57575ef51e2f2696073827571cd2ee70029",
									".code": [
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "MSTORE"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "LT"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "JUMPI"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "SWAP1"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "DIV"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "AND"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "EQ"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "JUMPI"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "EQ"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "JUMPI"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "EQ"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "JUMPI"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "JUMPDEST"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 1251,
											"name": "REVERT"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "JUMP"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "DUP3"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "RETURN"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP3"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "JUMP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "RETURN"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SUB"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP3"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP3"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "JUMP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP3"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ISZERO"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ISZERO"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ISZERO"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ISZERO"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "MSTORE"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SUB"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "RETURN"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "JUMPDEST"
										},
										{
											"begin": 433,
											"end": 440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 455,
											"end": 467,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 455,
											"end": 467,
											"name": "SLOAD"
										},
										{
											"begin": 448,
											"end": 467,
											"name": "SWAP1"
										},
										{
											"begin": 448,
											"end": 467,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1235,
											"name": "DUP1"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1242,
											"name": "DUP4"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "KECCAK256"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1220,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "JUMPDEST"
										},
										{
											"begin": 689,
											"end": 693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 719,
											"end": 727,
											"name": "DUP1"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 728,
											"end": 738,
											"name": "CALLER"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "AND"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "AND"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "DUP2"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "MSTORE"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "ADD"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SWAP1"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "DUP2"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "MSTORE"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "ADD"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "KECCAK256"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SLOAD"
										},
										{
											"begin": 709,
											"end": 715,
											"name": "DUP3"
										},
										{
											"begin": 709,
											"end": 739,
											"name": "GT"
										},
										{
											"begin": 709,
											"end": 739,
											"name": "ISZERO"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "ISZERO"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "ISZERO"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "JUMPI"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "DUP1"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "REVERT"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "AND"
										},
										{
											"begin": 754,
											"end": 757,
											"name": "DUP4"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "AND"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "EQ"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "ISZERO"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "ISZERO"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "ISZERO"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "JUMPI"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "DUP1"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "REVERT"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP3"
										},
										{
											"begin": 802,
											"end": 810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "DUP1"
										},
										{
											"begin": 811,
											"end": 821,
											"name": "CALLER"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "AND"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "AND"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "KECCAK256"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "SLOAD"
										},
										{
											"begin": 802,
											"end": 826,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 826,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "SWAP2"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "AND"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "JUMPDEST"
										},
										{
											"begin": 779,
											"end": 787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "DUP1"
										},
										{
											"begin": 788,
											"end": 798,
											"name": "CALLER"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "AND"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "AND"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "DUP2"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "MSTORE"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "ADD"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "SWAP1"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "DUP2"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "MSTORE"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "ADD"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "KECCAK256"
										},
										{
											"begin": 779,
											"end": 834,
											"name": "DUP2"
										},
										{
											"begin": 779,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 779,
											"end": 834,
											"name": "SSTORE"
										},
										{
											"begin": 779,
											"end": 834,
											"name": "POP"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP3"
										},
										{
											"begin": 856,
											"end": 864,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 868,
											"name": "DUP7"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "AND"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "AND"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "MSTORE"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "ADD"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "MSTORE"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "ADD"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "KECCAK256"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "SLOAD"
										},
										{
											"begin": 856,
											"end": 873,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 856,
											"end": 873,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "SWAP2"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "AND"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMPDEST"
										},
										{
											"begin": 840,
											"end": 848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "DUP1"
										},
										{
											"begin": 849,
											"end": 852,
											"name": "DUP6"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "AND"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "AND"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "DUP2"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "MSTORE"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "ADD"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "SWAP1"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "DUP2"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "MSTORE"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "ADD"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "KECCAK256"
										},
										{
											"begin": 840,
											"end": 881,
											"name": "DUP2"
										},
										{
											"begin": 840,
											"end": 881,
											"name": "SWAP1"
										},
										{
											"begin": 840,
											"end": 881,
											"name": "SSTORE"
										},
										{
											"begin": 840,
											"end": 881,
											"name": "POP"
										},
										{
											"begin": 913,
											"end": 916,
											"name": "DUP3"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "AND"
										},
										{
											"begin": 901,
											"end": 911,
											"name": "CALLER"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "AND"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 918,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "MLOAD"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "DUP1"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "DUP3"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "DUP2"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "MSTORE"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "ADD"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP2"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "POP"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "POP"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "MLOAD"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "DUP1"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP2"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SUB"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP1"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "LOG3"
										},
										{
											"begin": 938,
											"end": 942,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 931,
											"end": 942,
											"name": "SWAP1"
										},
										{
											"begin": 931,
											"end": 942,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP3"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1150,
											"name": "DUP3"
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "DUP3"
										},
										{
											"begin": 1142,
											"end": 1150,
											"name": "GT"
										},
										{
											"begin": 1142,
											"end": 1150,
											"name": "ISZERO"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "ISZERO"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "ISZERO"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "JUMPI"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "INVALID"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "JUMPDEST"
										},
										{
											"begin": 1169,
											"end": 1171,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1166,
											"name": "DUP4"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "SUB"
										},
										{
											"begin": 1157,
											"end": 1171,
											"name": "SWAP1"
										},
										{
											"begin": 1157,
											"end": 1171,
											"name": "POP"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "SWAP3"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "SWAP2"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "JUMPDEST"
										},
										{
											"begin": 1298,
											"end": 1307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1326,
											"name": "DUP2"
										},
										{
											"begin": 1319,
											"end": 1321,
											"name": "DUP4"
										},
										{
											"begin": 1319,
											"end": 1326,
											"name": "ADD"
										},
										{
											"begin": 1315,
											"end": 1326,
											"name": "SWAP1"
										},
										{
											"begin": 1315,
											"end": 1326,
											"name": "POP"
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "DUP3"
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "DUP2"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "LT"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "ISZERO"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "ISZERO"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "ISZERO"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "JUMPI"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "INVALID"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "JUMPDEST"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "DUP1"
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "SWAP1"
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "SWAP3"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "SWAP2"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}}},\"title\":\"Basic token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":\"BasicToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"zeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1\",\"urls\":[\"bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22\"]},\"zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"zeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20 interface"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
				"ERC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20Basic"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol": {
				"StandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseApproval",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseApproval",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens that an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"return": "A uint256 specifying the amount of tokens still available for the spender."
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint256 representing the amount owned by the passed address."
							},
							"decreaseApproval(address,uint256)": {
								"details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_subtractedValue": "The amount of tokens to decrease the allowance by."
								}
							},
							"increaseApproval(address,uint256)": {
								"details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
								"params": {
									"_addedValue": "The amount of tokens to increase the allowance by.",
									"_spender": "The address which will spend the funds."
								}
							},
							"totalSupply()": {
								"details": "Total number of tokens in existence"
							},
							"transfer(address,uint256)": {
								"details": "Transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint256 the amount of tokens to be transferred"
								}
							}
						},
						"title": "Standard ERC20 token"
					},
					"evm": {
						"assembly": "    /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":334:4114  contract StandardToken is ERC20, BasicToken {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":334:4114  contract StandardToken is ERC20, BasicToken {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":334:4114  contract StandardToken is ERC20, BasicToken {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x95ea7b3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x66188463\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd73dd623\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_9\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1814:2002  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1814:2002  function approve(address _spender, uint256 _value) public returns (bool) {... */\n      pop\n      tag_11\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":389:472  function totalSupply() public view returns (uint256) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":389:472  function totalSupply() public view returns (uint256) {... */\n      pop\n      tag_14\n      jump(tag_15)\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":726:1196  function transferFrom(... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":726:1196  function transferFrom(... */\n      pop\n      tag_17\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3679:4111  function decreaseApproval(... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3679:4111  function decreaseApproval(... */\n      pop\n      tag_20\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1149:1248  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1149:1248  function balanceOf(address _owner) public view returns (uint256) {... */\n      pop\n      tag_23\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_24)\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":626:947  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":626:947  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      pop\n      tag_26\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2926:3222  function increaseApproval(... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2926:3222  function increaseApproval(... */\n      pop\n      tag_29\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_30)\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2321:2474  function allowance(... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2321:2474  function allowance(... */\n      pop\n      tag_32\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_33)\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1814:2002  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_12:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1881:1885  bool */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1925:1931  _value */\n      dup2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1893:1900  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1893:1912  allowed[msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1901:1911  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1893:1912  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1893:1922  allowed[msg.sender][_spender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1913:1921  _spender */\n      dup6\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1893:1922  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1893:1931  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1963:1971  _spender */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1942:1980  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1951:1961  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1942:1980  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1973:1979  _value */\n      dup5\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1942:1980  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1993:1997  true */\n      0x1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1986:1997  return true */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1814:2002  function approve(address _spender, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":389:472  function totalSupply() public view returns (uint256) {... */\n    tag_15:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":433:440  uint256 */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":455:467  totalSupply_ */\n      sload(0x1)\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":448:467  return totalSupply_ */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":389:472  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":726:1196  function transferFrom(... */\n    tag_18:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":832:836  bool */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":864:872  balances */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":864:879  balances[_from] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":873:878  _from */\n      dup6\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":864:879  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":854:860  _value */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":854:879  _value <= balances[_from] */\n      gt\n      iszero\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":846:880  require(_value <= balances[_from]) */\n      iszero\n      iszero\n      tag_37\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_37:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":904:911  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":904:918  allowed[_from] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":912:917  _from */\n      dup6\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":904:918  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":904:930  allowed[_from][msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":919:929  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":904:930  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":894:900  _value */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":894:930  _value <= allowed[_from][msg.sender] */\n      gt\n      iszero\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":886:931  require(_value <= allowed[_from][msg.sender]) */\n      iszero\n      iszero\n      tag_38\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_38:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":960:961  0 */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":945:962  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":945:948  _to */\n      dup4\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":945:962  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":937:963  require(_to != address(0)) */\n      iszero\n      iszero\n      tag_39\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_39:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":988:1015  balances[_from].sub(_value) */\n      tag_40\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1008:1014  _value */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":988:996  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":988:1003  balances[_from] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":997:1002  _from */\n      dup8\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":988:1003  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":988:1007  balances[_from].sub */\n      tag_41\n      swap1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":988:1015  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_40:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":970:978  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":970:985  balances[_from] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":979:984  _from */\n      dup7\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":970:985  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":970:1015  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1037:1062  balances[_to].add(_value) */\n      tag_42\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1055:1061  _value */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1037:1045  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1037:1050  balances[_to] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1046:1049  _to */\n      dup7\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1037:1050  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1037:1054  balances[_to].add */\n      tag_43\n      swap1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1037:1062  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_42:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1021:1029  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1021:1034  balances[_to] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1030:1033  _to */\n      dup6\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1021:1034  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1021:1062  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1097:1135  allowed[_from][msg.sender].sub(_value) */\n      tag_44\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1128:1134  _value */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1097:1104  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1097:1111  allowed[_from] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1105:1110  _from */\n      dup8\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1097:1111  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1097:1123  allowed[_from][msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1112:1122  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1097:1123  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1097:1127  allowed[_from][msg.sender].sub */\n      tag_41\n      swap1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1097:1135  allowed[_from][msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_44:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1068:1075  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1068:1082  allowed[_from] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1076:1081  _from */\n      dup7\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1068:1082  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1068:1094  allowed[_from][msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1083:1093  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1068:1094  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1068:1135  allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1162:1165  _to */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1146:1174  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1155:1160  _from */\n      dup5\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1146:1174  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1167:1173  _value */\n      dup5\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1146:1174  Transfer(_from, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1187:1191  true */\n      0x1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":1180:1191  return true */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":726:1196  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3679:4111  function decreaseApproval(... */\n    tag_21:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3785:3789  bool */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3799:3815  uint256 oldValue */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3818:3825  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3818:3837  allowed[msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3826:3836  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3818:3837  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3818:3847  allowed[msg.sender][_spender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3838:3846  _spender */\n      dup6\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3818:3847  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3799:3847  uint256 oldValue = allowed[msg.sender][_spender] */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3877:3885  oldValue */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3857:3873  _subtractedValue */\n      dup4\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3857:3885  _subtractedValue >= oldValue */\n      lt\n      iszero\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3853:4018  if (_subtractedValue >= oldValue) {... */\n      iszero\n      tag_46\n      jumpi\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3927:3928  0 */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3895:3902  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3895:3914  allowed[msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3903:3913  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3895:3914  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3895:3924  allowed[msg.sender][_spender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3915:3923  _spender */\n      dup7\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3895:3924  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3895:3928  allowed[msg.sender][_spender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3853:4018  if (_subtractedValue >= oldValue) {... */\n      jump(tag_47)\n    tag_46:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3981:4011  oldValue.sub(_subtractedValue) */\n      tag_48\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3994:4010  _subtractedValue */\n      dup4\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3981:3989  oldValue */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3981:3993  oldValue.sub */\n      tag_41\n      swap1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3981:4011  oldValue.sub(_subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_48:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3949:3956  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3949:3968  allowed[msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3957:3967  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3949:3968  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3949:3978  allowed[msg.sender][_spender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3969:3977  _spender */\n      dup7\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3949:3978  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3949:4011  allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3853:4018  if (_subtractedValue >= oldValue) {... */\n    tag_47:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4049:4057  _spender */\n      dup4\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4028:4089  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4037:4047  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4028:4089  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4059:4066  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4059:4078  allowed[msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4067:4077  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4059:4078  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4059:4088  allowed[msg.sender][_spender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4079:4087  _spender */\n      dup9\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4059:4088  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4028:4089  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4102:4106  true */\n      0x1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":4095:4106  return true */\n      swap2\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3679:4111  function decreaseApproval(... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1149:1248  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_24:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1205:1212  uint256 */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1227:1235  balances */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1227:1243  balances[_owner] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1236:1242  _owner */\n      dup4\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1227:1243  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1220:1243  return balances[_owner] */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":1149:1248  function balanceOf(address _owner) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":626:947  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_27:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":689:693  bool */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":719:727  balances */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":719:739  balances[msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":728:738  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":719:739  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":709:715  _value */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":709:739  _value <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":701:740  require(_value <= balances[msg.sender]) */\n      iszero\n      iszero\n      tag_51\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_51:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":769:770  0 */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":754:771  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":754:757  _to */\n      dup4\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":754:771  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":746:772  require(_to != address(0)) */\n      iszero\n      iszero\n      tag_52\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_52:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:834  balances[msg.sender].sub(_value) */\n      tag_53\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":827:833  _value */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:810  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:822  balances[msg.sender] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":811:821  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:822  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:826  balances[msg.sender].sub */\n      tag_41\n      swap1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":802:834  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":779:787  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":779:799  balances[msg.sender] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":788:798  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":779:799  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":779:834  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:881  balances[_to].add(_value) */\n      tag_54\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":874:880  _value */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:864  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:869  balances[_to] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":865:868  _to */\n      dup7\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:869  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:873  balances[_to].add */\n      tag_43\n      swap1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":856:881  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_54:\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":840:848  balances */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":840:853  balances[_to] */\n      dup1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":849:852  _to */\n      dup6\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":840:853  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":840:881  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":913:916  _to */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":892:925  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":901:911  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":892:925  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":918:924  _value */\n      dup5\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":892:925  Transfer(msg.sender, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":938:942  true */\n      0x1\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":931:942  return true */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":626:947  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2926:3222  function increaseApproval(... */\n    tag_30:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3027:3031  bool */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3081:3127  allowed[msg.sender][_spender].add(_addedValue) */\n      tag_56\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3115:3126  _addedValue */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3081:3088  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3081:3100  allowed[msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3089:3099  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3081:3100  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3081:3110  allowed[msg.sender][_spender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3101:3109  _spender */\n      dup7\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3081:3110  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3081:3114  allowed[msg.sender][_spender].add */\n      tag_43\n      swap1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3081:3127  allowed[msg.sender][_spender].add(_addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3041:3048  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3041:3060  allowed[msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3049:3059  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3041:3060  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3041:3070  allowed[msg.sender][_spender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3061:3069  _spender */\n      dup6\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3041:3070  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3041:3128  allowed[msg.sender][_spender] = (... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3160:3168  _spender */\n      dup3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3139:3200  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3148:3158  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3139:3200  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3170:3177  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3170:3189  allowed[msg.sender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3178:3188  msg.sender */\n      caller\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3170:3189  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3170:3199  allowed[msg.sender][_spender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3190:3198  _spender */\n      dup8\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3170:3199  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3139:3200  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3213:3217  true */\n      0x1\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":3206:3217  return true */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2926:3222  function increaseApproval(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2321:2474  function allowance(... */\n    tag_33:\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2420:2427  uint256 */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2444:2451  allowed */\n      0x2\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2444:2459  allowed[_owner] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2452:2458  _owner */\n      dup5\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2444:2459  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2444:2469  allowed[_owner][_spender] */\n      0x0\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2460:2468  _spender */\n      dup4\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2444:2469  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2437:2469  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":2321:2474  function allowance(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1060:1176  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {... */\n    tag_41:\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1120:1127  uint256 */\n      0x0\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1148:1150  _a */\n      dup3\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1142:1144  _b */\n      dup3\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1142:1150  _b <= _a */\n      gt\n      iszero\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1135:1151  assert(_b <= _a) */\n      iszero\n      iszero\n      tag_59\n      jumpi\n      invalid\n    tag_59:\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1169:1171  _b */\n      dup2\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1164:1166  _a */\n      dup4\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1164:1171  _a - _b */\n      sub\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1157:1171  return _a - _b */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1060:1176  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1238:1366  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {... */\n    tag_43:\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1298:1307  uint256 c */\n      0x0\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1324:1326  _b */\n      dup2\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1319:1321  _a */\n      dup4\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1319:1326  _a + _b */\n      add\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1315:1326  c = _a + _b */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1344:1346  _a */\n      dup3\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1339:1340  c */\n      dup2\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1339:1346  c >= _a */\n      lt\n      iszero\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1332:1347  assert(c >= _a) */\n      iszero\n      iszero\n      tag_61\n      jumpi\n      invalid\n    tag_61:\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1360:1361  c */\n      dup1\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1353:1361  return c */\n      swap1\n      pop\n        /* \"zeppelin-solidity/contracts/math/SafeMath.sol\":1238:1366  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820cca5f2ed3c1890e8d144852c8bc9a5654ddab07f51ead3fd81ce20cf0c7f8bd30029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061103a806100206000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461009357806318160ddd146100f857806323b872dd1461012357806366188463146101a857806370a082311461020d578063a9059cbb14610264578063d73dd623146102c9578063dd62ed3e1461032e575b600080fd5b34801561009f57600080fd5b506100de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103a5565b604051808215151515815260200191505060405180910390f35b34801561010457600080fd5b5061010d610497565b6040518082815260200191505060405180910390f35b34801561012f57600080fd5b5061018e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104a1565b604051808215151515815260200191505060405180910390f35b3480156101b457600080fd5b506101f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061085c565b604051808215151515815260200191505060405180910390f35b34801561021957600080fd5b5061024e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aee565b6040518082815260200191505060405180910390f35b34801561027057600080fd5b506102af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b36565b604051808215151515815260200191505060405180910390f35b3480156102d557600080fd5b50610314600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d56565b604051808215151515815260200191505060405180910390f35b34801561033a57600080fd5b5061038f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f52565b6040518082815260200191505060405180910390f35b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156104f057600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561057b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156105b757600080fd5b610608826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd990919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061069b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ff290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061076c82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd990919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310151561096e576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a02565b6109818382610fd990919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610b8557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610bc157600080fd5b610c12826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd990919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca5826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ff290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000610de782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ff290919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211151515610fe757fe5b818303905092915050565b6000818301905082811015151561100557fe5b809050929150505600a165627a7a72305820cca5f2ed3c1890e8d144852c8bc9a5654ddab07f51ead3fd81ce20cf0c7f8bd30029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x103A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x66188463 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xD73DD623 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x608 DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x69B DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x76C DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT ISZERO ISZERO PUSH2 0x96E JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x981 DUP4 DUP3 PUSH2 0xFD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC12 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCA5 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE7 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xFE7 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1005 JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcc 0xa5 CALLCODE 0xed EXTCODECOPY XOR SWAP1 0xe8 0xd1 DIFFICULTY DUP6 0x2c DUP12 0xc9 0xa5 PUSH6 0x4DDAB07F51EA 0xd3 REVERT DUP2 0xce KECCAK256 0xcf 0xc PUSH32 0x8BD3002900000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "334:3780:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:3780:5;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461009357806318160ddd146100f857806323b872dd1461012357806366188463146101a857806370a082311461020d578063a9059cbb14610264578063d73dd623146102c9578063dd62ed3e1461032e575b600080fd5b34801561009f57600080fd5b506100de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103a5565b604051808215151515815260200191505060405180910390f35b34801561010457600080fd5b5061010d610497565b6040518082815260200191505060405180910390f35b34801561012f57600080fd5b5061018e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104a1565b604051808215151515815260200191505060405180910390f35b3480156101b457600080fd5b506101f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061085c565b604051808215151515815260200191505060405180910390f35b34801561021957600080fd5b5061024e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aee565b6040518082815260200191505060405180910390f35b34801561027057600080fd5b506102af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b36565b604051808215151515815260200191505060405180910390f35b3480156102d557600080fd5b50610314600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d56565b604051808215151515815260200191505060405180910390f35b34801561033a57600080fd5b5061038f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f52565b6040518082815260200191505060405180910390f35b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156104f057600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561057b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156105b757600080fd5b610608826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd990919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061069b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ff290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061076c82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd990919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310151561096e576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a02565b6109818382610fd990919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610b8557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610bc157600080fd5b610c12826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd990919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca5826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ff290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000610de782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ff290919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211151515610fe757fe5b818303905092915050565b6000818301905082811015151561100557fe5b809050929150505600a165627a7a72305820cca5f2ed3c1890e8d144852c8bc9a5654ddab07f51ead3fd81ce20cf0c7f8bd30029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x66188463 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xD73DD623 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x608 DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x69B DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x76C DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT ISZERO ISZERO PUSH2 0x96E JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x981 DUP4 DUP3 PUSH2 0xFD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC12 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCA5 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE7 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xFE7 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1005 JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcc 0xa5 CALLCODE 0xed EXTCODECOPY XOR SWAP1 0xe8 0xd1 DIFFICULTY DUP6 0x2c DUP12 0xc9 0xa5 PUSH6 0x4DDAB07F51EA 0xd3 REVERT DUP2 0xce KECCAK256 0xcf 0xc PUSH32 0x8BD3002900000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "334:3780:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1814:188:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:83:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:2;;;;;;;;;;;;;;;;;;;;;;;726:470:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;726:470:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3679:432;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3679:432:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:99:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:99:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;626:321;;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:321:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:296:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2926:296:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2321:153:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188;1881:4;1925:6;1893:7;:19;1901:10;1893:19;;;;;;;;;;;;;;;:29;1913:8;1893:29;;;;;;;;;;;;;;;:38;;;;1963:8;1942:38;;1951:10;1942:38;;;1973:6;1942:38;;;;;;;;;;;;;;;;;;1993:4;1986:11;;1814:188;;;;:::o;389:83:2:-;433:7;455:12;;448:19;;389:83;:::o;726:470:5:-;832:4;864:8;:15;873:5;864:15;;;;;;;;;;;;;;;;854:6;:25;;846:34;;;;;;;;904:7;:14;912:5;904:14;;;;;;;;;;;;;;;:26;919:10;904:26;;;;;;;;;;;;;;;;894:6;:36;;886:45;;;;;;;;960:1;945:17;;:3;:17;;;;937:26;;;;;;;;988:27;1008:6;988:8;:15;997:5;988:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;970:8;:15;979:5;970:15;;;;;;;;;;;;;;;:45;;;;1037:25;1055:6;1037:8;:13;1046:3;1037:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1021:8;:13;1030:3;1021:13;;;;;;;;;;;;;;;:41;;;;1097:38;1128:6;1097:7;:14;1105:5;1097:14;;;;;;;;;;;;;;;:26;1112:10;1097:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1068:7;:14;1076:5;1068:14;;;;;;;;;;;;;;;:26;1083:10;1068:26;;;;;;;;;;;;;;;:67;;;;1162:3;1146:28;;1155:5;1146:28;;;1167:6;1146:28;;;;;;;;;;;;;;;;;;1187:4;1180:11;;726:470;;;;;:::o;3679:432::-;3785:4;3799:16;3818:7;:19;3826:10;3818:19;;;;;;;;;;;;;;;:29;3838:8;3818:29;;;;;;;;;;;;;;;;3799:48;;3877:8;3857:16;:28;;3853:165;;;3927:1;3895:7;:19;3903:10;3895:19;;;;;;;;;;;;;;;:29;3915:8;3895:29;;;;;;;;;;;;;;;:33;;;;3853:165;;;3981:30;3994:16;3981:8;:12;;:30;;;;:::i;:::-;3949:7;:19;3957:10;3949:19;;;;;;;;;;;;;;;:29;3969:8;3949:29;;;;;;;;;;;;;;;:62;;;;3853:165;4049:8;4028:61;;4037:10;4028:61;;;4059:7;:19;4067:10;4059:19;;;;;;;;;;;;;;;:29;4079:8;4059:29;;;;;;;;;;;;;;;;4028:61;;;;;;;;;;;;;;;;;;4102:4;4095:11;;3679:432;;;;;:::o;1149:99:2:-;1205:7;1227:8;:16;1236:6;1227:16;;;;;;;;;;;;;;;;1220:23;;1149:99;;;:::o;626:321::-;689:4;719:8;:20;728:10;719:20;;;;;;;;;;;;;;;;709:6;:30;;701:39;;;;;;;;769:1;754:17;;:3;:17;;;;746:26;;;;;;;;802:32;827:6;802:8;:20;811:10;802:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;779:8;:20;788:10;779:20;;;;;;;;;;;;;;;:55;;;;856:25;874:6;856:8;:13;865:3;856:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;840:8;:13;849:3;840:13;;;;;;;;;;;;;;;:41;;;;913:3;892:33;;901:10;892:33;;;918:6;892:33;;;;;;;;;;;;;;;;;;938:4;931:11;;626:321;;;;:::o;2926:296:5:-;3027:4;3081:46;3115:11;3081:7;:19;3089:10;3081:19;;;;;;;;;;;;;;;:29;3101:8;3081:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;3041:7;:19;3049:10;3041:19;;;;;;;;;;;;;;;:29;3061:8;3041:29;;;;;;;;;;;;;;;:87;;;;3160:8;3139:61;;3148:10;3139:61;;;3170:7;:19;3178:10;3170:19;;;;;;;;;;;;;;;:29;3190:8;3170:29;;;;;;;;;;;;;;;;3139:61;;;;;;;;;;;;;;;;;;3213:4;3206:11;;2926:296;;;;:::o;2321:153::-;2420:7;2444;:15;2452:6;2444:15;;;;;;;;;;;;;;;:25;2460:8;2444:25;;;;;;;;;;;;;;;;2437:32;;2321:153;;;;:::o;1060:116:1:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;1238:128::-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "830800",
								"executionCost": "864",
								"totalCost": "831664"
							},
							"external": {
								"allowance(address,address)": "838",
								"approve(address,uint256)": "22331",
								"balanceOf(address)": "647",
								"decreaseApproval(address,uint256)": "infinite",
								"increaseApproval(address,uint256)": "infinite",
								"totalSupply()": "424",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 334,
									"end": 4114,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 334,
									"end": 4114,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 334,
									"end": 4114,
									"name": "MSTORE"
								},
								{
									"begin": 334,
									"end": 4114,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 4114,
									"name": "POP"
								},
								{
									"begin": 334,
									"end": 4114,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 4114,
									"name": "DUP1"
								},
								{
									"begin": 334,
									"end": 4114,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 4114,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 4114,
									"name": "CODECOPY"
								},
								{
									"begin": 334,
									"end": 4114,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 4114,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820cca5f2ed3c1890e8d144852c8bc9a5654ddab07f51ead3fd81ce20cf0c7f8bd30029",
									".code": [
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "MSTORE"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "LT"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "SWAP1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "DIV"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "AND"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "66188463"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "D73DD623"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "EQ"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 334,
											"end": 4114,
											"name": "REVERT"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "JUMPDEST"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "DUP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SUB"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "DUP2"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "ADD"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "DUP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "DUP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "AND"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "ADD"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP3"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP2"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "DUP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "ADD"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP3"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP2"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "JUMP"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "JUMPDEST"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "MLOAD"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "DUP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "DUP3"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "ISZERO"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "ISZERO"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "ISZERO"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "ISZERO"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "DUP2"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "MSTORE"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "ADD"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP2"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "MLOAD"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "DUP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP2"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SUB"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP1"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "RETURN"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "JUMP"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "DUP3"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "RETURN"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "JUMPDEST"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "DUP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SUB"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "DUP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "DUP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "AND"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP3"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP2"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "DUP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "AND"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP3"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP2"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "DUP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP3"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP2"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "JUMP"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "JUMPDEST"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "MLOAD"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "DUP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "DUP3"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "ISZERO"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "ISZERO"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "ISZERO"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "ISZERO"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "MSTORE"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP2"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "MLOAD"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "DUP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP2"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SUB"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "RETURN"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "JUMPDEST"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "POP"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "DUP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SUB"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "DUP2"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "ADD"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "DUP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "DUP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "AND"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "ADD"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP3"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP2"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "DUP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "ADD"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP3"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP2"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "POP"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "POP"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "POP"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "JUMP"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "JUMPDEST"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "MLOAD"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "DUP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "DUP3"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "ISZERO"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "ISZERO"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "ISZERO"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "ISZERO"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "DUP2"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "MSTORE"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "ADD"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP2"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "POP"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "POP"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "MLOAD"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "DUP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP2"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SUB"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP1"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "RETURN"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP3"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "JUMP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "RETURN"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SUB"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP3"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP3"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "JUMP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP3"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ISZERO"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ISZERO"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ISZERO"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ISZERO"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "MSTORE"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SUB"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "RETURN"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "JUMPDEST"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SUB"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "DUP2"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "ADD"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "AND"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "ADD"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP3"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP2"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "ADD"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP3"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP2"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "JUMP"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "JUMPDEST"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "MLOAD"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "DUP3"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "ISZERO"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "ISZERO"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "ISZERO"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "ISZERO"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "DUP2"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "MSTORE"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "ADD"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP2"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "MLOAD"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "DUP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP2"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SUB"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "RETURN"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "JUMPDEST"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "DUP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SUB"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "DUP2"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "ADD"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "DUP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "DUP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "AND"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "ADD"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP3"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP2"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "DUP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "AND"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "ADD"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP3"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP2"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "JUMP"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "JUMPDEST"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "MLOAD"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "DUP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "DUP3"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "DUP2"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "MSTORE"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "ADD"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP2"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "MLOAD"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "DUP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP2"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SUB"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "RETURN"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "JUMPDEST"
										},
										{
											"begin": 1881,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP2"
										},
										{
											"begin": 1893,
											"end": 1900,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1911,
											"name": "CALLER"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "AND"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "AND"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "DUP2"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "MSTORE"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "ADD"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "SWAP1"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "DUP2"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "MSTORE"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "ADD"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "KECCAK256"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1921,
											"name": "DUP6"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "AND"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "AND"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "DUP2"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "MSTORE"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "ADD"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "DUP2"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "MSTORE"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "ADD"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "KECCAK256"
										},
										{
											"begin": 1893,
											"end": 1931,
											"name": "DUP2"
										},
										{
											"begin": 1893,
											"end": 1931,
											"name": "SWAP1"
										},
										{
											"begin": 1893,
											"end": 1931,
											"name": "SSTORE"
										},
										{
											"begin": 1893,
											"end": 1931,
											"name": "POP"
										},
										{
											"begin": 1963,
											"end": 1971,
											"name": "DUP3"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "AND"
										},
										{
											"begin": 1951,
											"end": 1961,
											"name": "CALLER"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "AND"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1973,
											"end": 1979,
											"name": "DUP5"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "MLOAD"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "DUP1"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "DUP3"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "DUP2"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "MSTORE"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "ADD"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "SWAP2"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "POP"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "POP"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "MLOAD"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "DUP1"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "SWAP2"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "SUB"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "SWAP1"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "LOG3"
										},
										{
											"begin": 1993,
											"end": 1997,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1986,
											"end": 1997,
											"name": "SWAP1"
										},
										{
											"begin": 1986,
											"end": 1997,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP3"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "SWAP2"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 2002,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "JUMPDEST"
										},
										{
											"begin": 433,
											"end": 440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 455,
											"end": 467,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 455,
											"end": 467,
											"name": "SLOAD"
										},
										{
											"begin": 448,
											"end": 467,
											"name": "SWAP1"
										},
										{
											"begin": 448,
											"end": 467,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 472,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "JUMPDEST"
										},
										{
											"begin": 832,
											"end": 836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 864,
											"end": 872,
											"name": "DUP1"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 873,
											"end": 878,
											"name": "DUP6"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "AND"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "AND"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "MSTORE"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "ADD"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "SWAP1"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "MSTORE"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "ADD"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "KECCAK256"
										},
										{
											"begin": 864,
											"end": 879,
											"name": "SLOAD"
										},
										{
											"begin": 854,
											"end": 860,
											"name": "DUP3"
										},
										{
											"begin": 854,
											"end": 879,
											"name": "GT"
										},
										{
											"begin": 854,
											"end": 879,
											"name": "ISZERO"
										},
										{
											"begin": 846,
											"end": 880,
											"name": "ISZERO"
										},
										{
											"begin": 846,
											"end": 880,
											"name": "ISZERO"
										},
										{
											"begin": 846,
											"end": 880,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 846,
											"end": 880,
											"name": "JUMPI"
										},
										{
											"begin": 846,
											"end": 880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 846,
											"end": 880,
											"name": "DUP1"
										},
										{
											"begin": 846,
											"end": 880,
											"name": "REVERT"
										},
										{
											"begin": 846,
											"end": 880,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 846,
											"end": 880,
											"name": "JUMPDEST"
										},
										{
											"begin": 904,
											"end": 911,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 912,
											"end": 917,
											"name": "DUP6"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "AND"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "AND"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "DUP2"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "MSTORE"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "ADD"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "SWAP1"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "DUP2"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "MSTORE"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "ADD"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "KECCAK256"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 919,
											"end": 929,
											"name": "CALLER"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "AND"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "AND"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "DUP2"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "MSTORE"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "ADD"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "SWAP1"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "DUP2"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "MSTORE"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "ADD"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "KECCAK256"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "SLOAD"
										},
										{
											"begin": 894,
											"end": 900,
											"name": "DUP3"
										},
										{
											"begin": 894,
											"end": 930,
											"name": "GT"
										},
										{
											"begin": 894,
											"end": 930,
											"name": "ISZERO"
										},
										{
											"begin": 886,
											"end": 931,
											"name": "ISZERO"
										},
										{
											"begin": 886,
											"end": 931,
											"name": "ISZERO"
										},
										{
											"begin": 886,
											"end": 931,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 886,
											"end": 931,
											"name": "JUMPI"
										},
										{
											"begin": 886,
											"end": 931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 886,
											"end": 931,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 931,
											"name": "REVERT"
										},
										{
											"begin": 886,
											"end": 931,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 886,
											"end": 931,
											"name": "JUMPDEST"
										},
										{
											"begin": 960,
											"end": 961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 945,
											"end": 962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 945,
											"end": 962,
											"name": "AND"
										},
										{
											"begin": 945,
											"end": 948,
											"name": "DUP4"
										},
										{
											"begin": 945,
											"end": 962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 945,
											"end": 962,
											"name": "AND"
										},
										{
											"begin": 945,
											"end": 962,
											"name": "EQ"
										},
										{
											"begin": 945,
											"end": 962,
											"name": "ISZERO"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "ISZERO"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "ISZERO"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "JUMPI"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "REVERT"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 937,
											"end": 963,
											"name": "JUMPDEST"
										},
										{
											"begin": 988,
											"end": 1015,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1014,
											"name": "DUP3"
										},
										{
											"begin": 988,
											"end": 996,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DUP8"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "AND"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "AND"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "DUP2"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "MSTORE"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "ADD"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "SWAP1"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "DUP2"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "MSTORE"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "ADD"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "KECCAK256"
										},
										{
											"begin": 988,
											"end": 1003,
											"name": "SLOAD"
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "SWAP1"
										},
										{
											"begin": 988,
											"end": 1015,
											"name": "SWAP2"
										},
										{
											"begin": 988,
											"end": 1015,
											"name": "SWAP1"
										},
										{
											"begin": 988,
											"end": 1015,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 988,
											"end": 1015,
											"name": "AND"
										},
										{
											"begin": 988,
											"end": 1015,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 988,
											"end": 1015,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1015,
											"name": "JUMPDEST"
										},
										{
											"begin": 970,
											"end": 978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "DUP1"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "DUP7"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "AND"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "AND"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "DUP2"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "MSTORE"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "ADD"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "SWAP1"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "DUP2"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "MSTORE"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "ADD"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 970,
											"end": 985,
											"name": "KECCAK256"
										},
										{
											"begin": 970,
											"end": 1015,
											"name": "DUP2"
										},
										{
											"begin": 970,
											"end": 1015,
											"name": "SWAP1"
										},
										{
											"begin": 970,
											"end": 1015,
											"name": "SSTORE"
										},
										{
											"begin": 970,
											"end": 1015,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1062,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1055,
											"end": 1061,
											"name": "DUP3"
										},
										{
											"begin": 1037,
											"end": 1045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "DUP1"
										},
										{
											"begin": 1046,
											"end": 1049,
											"name": "DUP7"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "KECCAK256"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "SLOAD"
										},
										{
											"begin": 1037,
											"end": 1054,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1037,
											"end": 1054,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1062,
											"name": "SWAP2"
										},
										{
											"begin": 1037,
											"end": 1062,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1062,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1062,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1062,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1037,
											"end": 1062,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1037,
											"end": 1062,
											"name": "JUMPDEST"
										},
										{
											"begin": 1021,
											"end": 1029,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "DUP1"
										},
										{
											"begin": 1030,
											"end": 1033,
											"name": "DUP6"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "AND"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "AND"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "DUP2"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "MSTORE"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "ADD"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "SWAP1"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "DUP2"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "MSTORE"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "ADD"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "KECCAK256"
										},
										{
											"begin": 1021,
											"end": 1062,
											"name": "DUP2"
										},
										{
											"begin": 1021,
											"end": 1062,
											"name": "SWAP1"
										},
										{
											"begin": 1021,
											"end": 1062,
											"name": "SSTORE"
										},
										{
											"begin": 1021,
											"end": 1062,
											"name": "POP"
										},
										{
											"begin": 1097,
											"end": 1135,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DUP3"
										},
										{
											"begin": 1097,
											"end": 1104,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "DUP8"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "AND"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "AND"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "DUP2"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "MSTORE"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "ADD"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "SWAP1"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "DUP2"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "MSTORE"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "ADD"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "KECCAK256"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1122,
											"name": "CALLER"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "AND"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "AND"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "DUP2"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "MSTORE"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "ADD"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "SWAP1"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "DUP2"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "MSTORE"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "ADD"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "KECCAK256"
										},
										{
											"begin": 1097,
											"end": 1123,
											"name": "SLOAD"
										},
										{
											"begin": 1097,
											"end": 1127,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1097,
											"end": 1127,
											"name": "SWAP1"
										},
										{
											"begin": 1097,
											"end": 1135,
											"name": "SWAP2"
										},
										{
											"begin": 1097,
											"end": 1135,
											"name": "SWAP1"
										},
										{
											"begin": 1097,
											"end": 1135,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1135,
											"name": "AND"
										},
										{
											"begin": 1097,
											"end": 1135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1097,
											"end": 1135,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1097,
											"end": 1135,
											"name": "JUMPDEST"
										},
										{
											"begin": 1068,
											"end": 1075,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1081,
											"name": "DUP7"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "DUP2"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "MSTORE"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "ADD"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "DUP2"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "MSTORE"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "ADD"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1082,
											"name": "KECCAK256"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1093,
											"name": "CALLER"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "AND"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "AND"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "DUP2"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "DUP2"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1094,
											"name": "KECCAK256"
										},
										{
											"begin": 1068,
											"end": 1135,
											"name": "DUP2"
										},
										{
											"begin": 1068,
											"end": 1135,
											"name": "SWAP1"
										},
										{
											"begin": 1068,
											"end": 1135,
											"name": "SSTORE"
										},
										{
											"begin": 1068,
											"end": 1135,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1165,
											"name": "DUP3"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "AND"
										},
										{
											"begin": 1155,
											"end": 1160,
											"name": "DUP5"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "AND"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "DUP5"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "MLOAD"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "DUP1"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "DUP3"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "DUP2"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "MSTORE"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "ADD"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "SWAP2"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "POP"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "POP"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "MLOAD"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "DUP1"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "SWAP2"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "SUB"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "SWAP1"
										},
										{
											"begin": 1146,
											"end": 1174,
											"name": "LOG3"
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1180,
											"end": 1191,
											"name": "SWAP1"
										},
										{
											"begin": 1180,
											"end": 1191,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP4"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "SWAP3"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 1196,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "JUMPDEST"
										},
										{
											"begin": 3785,
											"end": 3789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 3818,
											"end": 3825,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3836,
											"name": "CALLER"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "AND"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "AND"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "DUP2"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "MSTORE"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "ADD"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "SWAP1"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "DUP2"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "MSTORE"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "ADD"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "KECCAK256"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3846,
											"name": "DUP6"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "AND"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "AND"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "DUP2"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "MSTORE"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "ADD"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "SWAP1"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "DUP2"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "MSTORE"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "ADD"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "KECCAK256"
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "SLOAD"
										},
										{
											"begin": 3799,
											"end": 3847,
											"name": "SWAP1"
										},
										{
											"begin": 3799,
											"end": 3847,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 3885,
											"name": "DUP1"
										},
										{
											"begin": 3857,
											"end": 3873,
											"name": "DUP4"
										},
										{
											"begin": 3857,
											"end": 3885,
											"name": "LT"
										},
										{
											"begin": 3857,
											"end": 3885,
											"name": "ISZERO"
										},
										{
											"begin": 3853,
											"end": 4018,
											"name": "ISZERO"
										},
										{
											"begin": 3853,
											"end": 4018,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3853,
											"end": 4018,
											"name": "JUMPI"
										},
										{
											"begin": 3927,
											"end": 3928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3902,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3913,
											"name": "CALLER"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "AND"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "AND"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "DUP2"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "MSTORE"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "ADD"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "SWAP1"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "DUP2"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "MSTORE"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "ADD"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3914,
											"name": "KECCAK256"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "DUP7"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "AND"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "AND"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "DUP2"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "MSTORE"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "ADD"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "SWAP1"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "DUP2"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "MSTORE"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "ADD"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3924,
											"name": "KECCAK256"
										},
										{
											"begin": 3895,
											"end": 3928,
											"name": "DUP2"
										},
										{
											"begin": 3895,
											"end": 3928,
											"name": "SWAP1"
										},
										{
											"begin": 3895,
											"end": 3928,
											"name": "SSTORE"
										},
										{
											"begin": 3895,
											"end": 3928,
											"name": "POP"
										},
										{
											"begin": 3853,
											"end": 4018,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3853,
											"end": 4018,
											"name": "JUMP"
										},
										{
											"begin": 3853,
											"end": 4018,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3853,
											"end": 4018,
											"name": "JUMPDEST"
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "DUP4"
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "DUP3"
										},
										{
											"begin": 3981,
											"end": 3993,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3981,
											"end": 3993,
											"name": "SWAP1"
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "SWAP2"
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "SWAP1"
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "AND"
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "JUMPDEST"
										},
										{
											"begin": 3949,
											"end": 3956,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3967,
											"name": "CALLER"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "AND"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "AND"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "DUP2"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "MSTORE"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "ADD"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "SWAP1"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "DUP2"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "MSTORE"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "ADD"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3968,
											"name": "KECCAK256"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3977,
											"name": "DUP7"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "AND"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "AND"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "DUP2"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "MSTORE"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "ADD"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "SWAP1"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "DUP2"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "MSTORE"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "ADD"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "KECCAK256"
										},
										{
											"begin": 3949,
											"end": 4011,
											"name": "DUP2"
										},
										{
											"begin": 3949,
											"end": 4011,
											"name": "SWAP1"
										},
										{
											"begin": 3949,
											"end": 4011,
											"name": "SSTORE"
										},
										{
											"begin": 3949,
											"end": 4011,
											"name": "POP"
										},
										{
											"begin": 3853,
											"end": 4018,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3853,
											"end": 4018,
											"name": "JUMPDEST"
										},
										{
											"begin": 4049,
											"end": 4057,
											"name": "DUP4"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "AND"
										},
										{
											"begin": 4037,
											"end": 4047,
											"name": "CALLER"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "AND"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4059,
											"end": 4066,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4077,
											"name": "CALLER"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "AND"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "AND"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "DUP2"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "MSTORE"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "ADD"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "DUP2"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "MSTORE"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "ADD"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "KECCAK256"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4087,
											"name": "DUP9"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "AND"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "AND"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "DUP2"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "MSTORE"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "ADD"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "SWAP1"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "DUP2"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "MSTORE"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "ADD"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "KECCAK256"
										},
										{
											"begin": 4059,
											"end": 4088,
											"name": "SLOAD"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "MLOAD"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "DUP3"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "DUP2"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "MSTORE"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "ADD"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "MLOAD"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "SUB"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 4028,
											"end": 4089,
											"name": "LOG3"
										},
										{
											"begin": 4102,
											"end": 4106,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "POP"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP3"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "SWAP2"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "POP"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "POP"
										},
										{
											"begin": 3679,
											"end": 4111,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1235,
											"name": "DUP1"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1242,
											"name": "DUP4"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "KECCAK256"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1220,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1248,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "JUMPDEST"
										},
										{
											"begin": 689,
											"end": 693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 719,
											"end": 727,
											"name": "DUP1"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 728,
											"end": 738,
											"name": "CALLER"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "AND"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "AND"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "DUP2"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "MSTORE"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "ADD"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SWAP1"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "DUP2"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "MSTORE"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "ADD"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "KECCAK256"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SLOAD"
										},
										{
											"begin": 709,
											"end": 715,
											"name": "DUP3"
										},
										{
											"begin": 709,
											"end": 739,
											"name": "GT"
										},
										{
											"begin": 709,
											"end": 739,
											"name": "ISZERO"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "ISZERO"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "ISZERO"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "JUMPI"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "DUP1"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "REVERT"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 701,
											"end": 740,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "AND"
										},
										{
											"begin": 754,
											"end": 757,
											"name": "DUP4"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "AND"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "EQ"
										},
										{
											"begin": 754,
											"end": 771,
											"name": "ISZERO"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "ISZERO"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "ISZERO"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "JUMPI"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "DUP1"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "REVERT"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 746,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP3"
										},
										{
											"begin": 802,
											"end": 810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "DUP1"
										},
										{
											"begin": 811,
											"end": 821,
											"name": "CALLER"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "AND"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "AND"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "KECCAK256"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "SLOAD"
										},
										{
											"begin": 802,
											"end": 826,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 802,
											"end": 826,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "SWAP2"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "AND"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 802,
											"end": 834,
											"name": "JUMPDEST"
										},
										{
											"begin": 779,
											"end": 787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "DUP1"
										},
										{
											"begin": 788,
											"end": 798,
											"name": "CALLER"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "AND"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "AND"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "DUP2"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "MSTORE"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "ADD"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "SWAP1"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "DUP2"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "MSTORE"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "ADD"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "KECCAK256"
										},
										{
											"begin": 779,
											"end": 834,
											"name": "DUP2"
										},
										{
											"begin": 779,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 779,
											"end": 834,
											"name": "SSTORE"
										},
										{
											"begin": 779,
											"end": 834,
											"name": "POP"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP3"
										},
										{
											"begin": 856,
											"end": 864,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 868,
											"name": "DUP7"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "AND"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "AND"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "MSTORE"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "ADD"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "MSTORE"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "ADD"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "KECCAK256"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "SLOAD"
										},
										{
											"begin": 856,
											"end": 873,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 856,
											"end": 873,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "SWAP2"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "AND"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 856,
											"end": 881,
											"name": "JUMPDEST"
										},
										{
											"begin": 840,
											"end": 848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "DUP1"
										},
										{
											"begin": 849,
											"end": 852,
											"name": "DUP6"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "AND"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "AND"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "DUP2"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "MSTORE"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "ADD"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "SWAP1"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "DUP2"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "MSTORE"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "ADD"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 840,
											"end": 853,
											"name": "KECCAK256"
										},
										{
											"begin": 840,
											"end": 881,
											"name": "DUP2"
										},
										{
											"begin": 840,
											"end": 881,
											"name": "SWAP1"
										},
										{
											"begin": 840,
											"end": 881,
											"name": "SSTORE"
										},
										{
											"begin": 840,
											"end": 881,
											"name": "POP"
										},
										{
											"begin": 913,
											"end": 916,
											"name": "DUP3"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "AND"
										},
										{
											"begin": 901,
											"end": 911,
											"name": "CALLER"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "AND"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 918,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "MLOAD"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "DUP1"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "DUP3"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "DUP2"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "MSTORE"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "ADD"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP2"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "POP"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "POP"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "MLOAD"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "DUP1"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP2"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SUB"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP1"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "LOG3"
										},
										{
											"begin": 938,
											"end": 942,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 931,
											"end": 942,
											"name": "SWAP1"
										},
										{
											"begin": 931,
											"end": 942,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP3"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 947,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "JUMPDEST"
										},
										{
											"begin": 3027,
											"end": 3031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3127,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 3115,
											"end": 3126,
											"name": "DUP3"
										},
										{
											"begin": 3081,
											"end": 3088,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3099,
											"name": "CALLER"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "AND"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "AND"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "DUP2"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "MSTORE"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "ADD"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "SWAP1"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "DUP2"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "MSTORE"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "ADD"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "KECCAK256"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3109,
											"name": "DUP7"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "AND"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "AND"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "DUP2"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "MSTORE"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "ADD"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "SWAP1"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "DUP2"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "MSTORE"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "ADD"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "KECCAK256"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "SLOAD"
										},
										{
											"begin": 3081,
											"end": 3114,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3081,
											"end": 3114,
											"name": "SWAP1"
										},
										{
											"begin": 3081,
											"end": 3127,
											"name": "SWAP2"
										},
										{
											"begin": 3081,
											"end": 3127,
											"name": "SWAP1"
										},
										{
											"begin": 3081,
											"end": 3127,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3127,
											"name": "AND"
										},
										{
											"begin": 3081,
											"end": 3127,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3081,
											"end": 3127,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 3081,
											"end": 3127,
											"name": "JUMPDEST"
										},
										{
											"begin": 3041,
											"end": 3048,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3049,
											"end": 3059,
											"name": "CALLER"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "AND"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "AND"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "DUP2"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "MSTORE"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "ADD"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "SWAP1"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "DUP2"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "MSTORE"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "ADD"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "KECCAK256"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3069,
											"name": "DUP6"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "AND"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "AND"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "DUP2"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "MSTORE"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "ADD"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "SWAP1"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "DUP2"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "MSTORE"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "ADD"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "KECCAK256"
										},
										{
											"begin": 3041,
											"end": 3128,
											"name": "DUP2"
										},
										{
											"begin": 3041,
											"end": 3128,
											"name": "SWAP1"
										},
										{
											"begin": 3041,
											"end": 3128,
											"name": "SSTORE"
										},
										{
											"begin": 3041,
											"end": 3128,
											"name": "POP"
										},
										{
											"begin": 3160,
											"end": 3168,
											"name": "DUP3"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "AND"
										},
										{
											"begin": 3148,
											"end": 3158,
											"name": "CALLER"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "AND"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3170,
											"end": 3177,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3188,
											"name": "CALLER"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "AND"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "AND"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "SWAP1"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "KECCAK256"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3198,
											"name": "DUP8"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "AND"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "AND"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "SWAP1"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "DUP2"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "MSTORE"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "ADD"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "KECCAK256"
										},
										{
											"begin": 3170,
											"end": 3199,
											"name": "SLOAD"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "MLOAD"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "DUP1"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "DUP3"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "DUP2"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "MSTORE"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "ADD"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "SWAP2"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "POP"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "POP"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "MLOAD"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "DUP1"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "SWAP2"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "SUB"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "SWAP1"
										},
										{
											"begin": 3139,
											"end": 3200,
											"name": "LOG3"
										},
										{
											"begin": 3213,
											"end": 3217,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3206,
											"end": 3217,
											"name": "SWAP1"
										},
										{
											"begin": 3206,
											"end": 3217,
											"name": "POP"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP3"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "SWAP2"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "POP"
										},
										{
											"begin": 2926,
											"end": 3222,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "JUMPDEST"
										},
										{
											"begin": 2420,
											"end": 2427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2458,
											"name": "DUP5"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "AND"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "AND"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "KECCAK256"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2468,
											"name": "DUP4"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "AND"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "AND"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "DUP2"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "MSTORE"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "ADD"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "SWAP1"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "DUP2"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "MSTORE"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "ADD"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "KECCAK256"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "SLOAD"
										},
										{
											"begin": 2437,
											"end": 2469,
											"name": "SWAP1"
										},
										{
											"begin": 2437,
											"end": 2469,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP3"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "SWAP2"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2474,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1150,
											"name": "DUP3"
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "DUP3"
										},
										{
											"begin": 1142,
											"end": 1150,
											"name": "GT"
										},
										{
											"begin": 1142,
											"end": 1150,
											"name": "ISZERO"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "ISZERO"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "ISZERO"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "JUMPI"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "INVALID"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "JUMPDEST"
										},
										{
											"begin": 1169,
											"end": 1171,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1166,
											"name": "DUP4"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "SUB"
										},
										{
											"begin": 1157,
											"end": 1171,
											"name": "SWAP1"
										},
										{
											"begin": 1157,
											"end": 1171,
											"name": "POP"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "SWAP3"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "SWAP2"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1060,
											"end": 1176,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "JUMPDEST"
										},
										{
											"begin": 1298,
											"end": 1307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1326,
											"name": "DUP2"
										},
										{
											"begin": 1319,
											"end": 1321,
											"name": "DUP4"
										},
										{
											"begin": 1319,
											"end": 1326,
											"name": "ADD"
										},
										{
											"begin": 1315,
											"end": 1326,
											"name": "SWAP1"
										},
										{
											"begin": 1315,
											"end": 1326,
											"name": "POP"
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "DUP3"
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "DUP2"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "LT"
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "ISZERO"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "ISZERO"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "ISZERO"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "JUMPI"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "INVALID"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "JUMPDEST"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "DUP1"
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "SWAP1"
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "SWAP3"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "SWAP2"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1366,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseApproval(address,uint256)": "66188463",
							"increaseApproval(address,uint256)": "d73dd623",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decreaseApproval(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseApproval(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_spender\":\"The address which will spend the funds.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Standard ERC20 token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":\"StandardToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"zeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1\",\"urls\":[\"bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22\"]},\"zeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]},\"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0xf98b4a9eed5064ef6fa47c3250121cf03f4f6528a20706d7b99e6c1dc9c1bb98\",\"urls\":[\"bzzr://7979b5eadacec799f6337581fdecb2f925ffb0f320fda4402bda043af1cbe706\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/Transfer&approve.sol:9:23: Warning: This declaration shadows an existing declaration.\n    function gettoken(address token, address owner) public {\r\n                      ^-----------^\ncontracts/Transfer&approve.sol:5:5: The shadowed declaration is here:\n    StandardToken public token;\r\n    ^------------------------^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"severity": "warning",
				"sourceLocation": {
					"end": 298,
					"file": "contracts/Transfer&approve.sol",
					"start": 285
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Transfer&approve.sol:9:38: Warning: This declaration shadows an existing declaration.\n    function gettoken(address token, address owner) public {\r\n                                     ^-----------^\ncontracts/Transfer&approve.sol:6:5: The shadowed declaration is here:\n    address public owner;\r\n    ^------------------^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"severity": "warning",
				"sourceLocation": {
					"end": 313,
					"file": "contracts/Transfer&approve.sol",
					"start": 300
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Transfer&approve.sol:13:23: Warning: This declaration shadows an existing declaration.\n    function transfer(address wallet, uint amount) public {\r\n                      ^------------^\ncontracts/Transfer&approve.sol:7:5: The shadowed declaration is here:\n    address public wallet;\r\n    ^-------------------^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"severity": "warning",
				"sourceLocation": {
					"end": 425,
					"file": "contracts/Transfer&approve.sol",
					"start": 411
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Transfer&approve.sol:13:39: Warning: This declaration shadows an existing declaration.\n    function transfer(address wallet, uint amount) public {\r\n                                      ^---------^\ncontracts/Transfer&approve.sol:8:5: The shadowed declaration is here:\n    uint amount;\r\n    ^---------^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"severity": "warning",
				"sourceLocation": {
					"end": 438,
					"file": "contracts/Transfer&approve.sol",
					"start": 427
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Transfer&approve.sol:13:23: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function transfer(address wallet, uint amount) public {\r\n                      ^------------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 425,
					"file": "contracts/Transfer&approve.sol",
					"start": 411
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Transfer&approve.sol:9:5: Warning: Function state mutability can be restricted to pure\n    function gettoken(address token, address owner) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 387,
					"file": "contracts/Transfer&approve.sol",
					"start": 267
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Transfer&approve.sol": {
				"ast": {
					"absolutePath": "contracts/Transfer&approve.sol",
					"exportedSymbols": {
						"transfer_approve": [
							52
						]
					},
					"id": 53,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "zeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
							"file": "zeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 53,
							"sourceUnit": 565,
							"src": "59:67:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "transfer_approve",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "161:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_StandardToken_$564",
										"typeString": "contract StandardToken"
									},
									"typeName": {
										"contractScope": null,
										"id": 3,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 564,
										"src": "161:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$564",
											"typeString": "contract StandardToken"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 6,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "194:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "194:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 8,
									"name": "wallet",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "221:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 10,
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "249:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "249:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "322:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 17,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "330:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 19,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "352:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 18,
															"name": "StandardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "338:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_StandardToken_$564_$",
																"typeString": "type(contract StandardToken)"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "338:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StandardToken_$564",
															"typeString": "contract StandardToken"
														}
													},
													"src": "330:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "330:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 23,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "366:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 24,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "374:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "366:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "366:13:0"
											}
										]
									},
									"documentation": null,
									"id": 28,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "gettoken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "285:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "300:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "284:30:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:0:0"
									},
									"scope": 52,
									"src": "267:120:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "447:94:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "466:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "475:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "466:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															582,
															583
														],
														"referencedDeclaration": 582,
														"src": "458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "458:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "458:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 44,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "507:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "514:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "514:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 47,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "526:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 41,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "488:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StandardToken_$564",
																"typeString": "contract StandardToken"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 417,
														"src": "488:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "488:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "488:45:0"
											}
										]
									},
									"documentation": null,
									"id": 51,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "wallet",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "411:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "427:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "427:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:0"
									},
									"scope": 52,
									"src": "393:148:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 53,
							"src": "128:416:0"
						}
					],
					"src": "33:515:0"
				},
				"id": 0
			},
			"zeppelin-solidity/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "zeppelin-solidity/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							146
						]
					},
					"id": 147,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 54,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "274:309:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 63,
														"name": "_a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "489:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "495:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 69,
												"nodeType": "IfStatement",
												"src": "485:36:1",
												"trueBody": {
													"id": 68,
													"nodeType": "Block",
													"src": "498:23:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "513:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 62,
															"id": 67,
															"nodeType": "Return",
															"src": "506:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 70,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "527:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 71,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "531:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 72,
															"name": "_b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "536:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "531:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "527:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "527:11:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 77,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "551:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 78,
																	"name": "_a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "555:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "551:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 80,
																"name": "_b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "561:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "551:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 76,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "544:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "544:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "544:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 61,
													"src": "577:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 62,
												"id": 85,
												"nodeType": "Return",
												"src": "570:8:1"
											}
										]
									},
									"documentation": "@dev Multiplies two numbers, throws on overflow.",
									"id": 87,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "216:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"name": "_b",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "228:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "215:24:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "263:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "262:11:1"
									},
									"scope": 146,
									"src": "203:380:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "734:214:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 96,
														"name": "_a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "936:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 97,
														"name": "_b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "941:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 95,
												"id": 99,
												"nodeType": "Return",
												"src": "929:14:1"
											}
										]
									},
									"documentation": "@dev Integer division of two numbers, truncating the quotient.",
									"id": 101,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "678:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "_b",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "690:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "677:24:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "725:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "724:9:1"
									},
									"scope": 146,
									"src": "665:283:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1129:47:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 111,
																"name": "_b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1142:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 112,
																"name": "_a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "1148:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1142:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 110,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "1135:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1135:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1135:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 116,
														"name": "_a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1164:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 117,
														"name": "_b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1169:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1164:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 109,
												"id": 119,
												"nodeType": "Return",
												"src": "1157:14:1"
											}
										]
									},
									"documentation": "@dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).",
									"id": 121,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1073:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"name": "_b",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1085:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1072:24:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1120:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1119:9:1"
									},
									"scope": 146,
									"src": "1060:116:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "1309:57:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 130,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "1315:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 131,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1319:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 132,
															"name": "_b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1324:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1319:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1315:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1315:11:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 137,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "1339:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 138,
																"name": "_a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "1344:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1339:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 136,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "1332:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1332:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "1332:15:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 142,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 128,
													"src": "1360:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 129,
												"id": 143,
												"nodeType": "Return",
												"src": "1353:8:1"
											}
										]
									},
									"documentation": "@dev Adds two numbers, throws on overflow.",
									"id": 145,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1251:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "_b",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1263:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1250:24:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1298:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1297:11:1"
									},
									"scope": 146,
									"src": "1238:128:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 147,
							"src": "117:1251:1"
						}
					],
					"src": "0:1369:1"
				},
				"id": 1
			},
			"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol": {
				"ast": {
					"absolutePath": "zeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
					"exportedSymbols": {
						"BasicToken": [
							242
						]
					},
					"id": 243,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": "zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
							"file": "./ERC20Basic.sol",
							"id": 149,
							"nodeType": "ImportDirective",
							"scope": 243,
							"sourceUnit": 318,
							"src": "27:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "zeppelin-solidity/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 150,
							"nodeType": "ImportDirective",
							"scope": 243,
							"sourceUnit": 147,
							"src": "54:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 151,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 317,
										"src": "203:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$317",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 152,
									"nodeType": "InheritanceSpecifier",
									"src": "203:10:2"
								}
							],
							"contractDependencies": [
								317
							],
							"contractKind": "contract",
							"documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242,
								317
							],
							"name": "BasicToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 155,
									"libraryName": {
										"contractScope": null,
										"id": 153,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 146,
										"src": "224:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$146",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "218:27:2",
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "237:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 159,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "249:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "257:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "249:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "268:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 161,
									"name": "totalSupply_",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "299:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 160,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "299:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "442:30:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 166,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 161,
													"src": "455:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 165,
												"id": 167,
												"nodeType": "Return",
												"src": "448:19:2"
											}
										]
									},
									"documentation": "@dev Total number of tokens in existence",
									"id": 169,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "409:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "433:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "432:9:2"
									},
									"scope": 242,
									"src": "389:83:2",
									"stateMutability": "view",
									"superFunction": 292,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "695:252:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 179,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "709:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 180,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "719:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 183,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 181,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "728:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "728:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "719:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "709:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															582,
															583
														],
														"referencedDeclaration": 582,
														"src": "701:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "701:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "701:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 188,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "754:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "769:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "761:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "761:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "754:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															582,
															583
														],
														"referencedDeclaration": 582,
														"src": "746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "746:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "746:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 195,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "779:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 198,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 196,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "788:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "788:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "779:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 204,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "827:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 199,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "802:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 202,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 200,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "811:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "811:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "802:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 121,
															"src": "802:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "802:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "779:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "779:55:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 208,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "840:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 210,
														"indexExpression": {
															"argumentTypes": null,
															"id": 209,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "849:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "840:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 215,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "874:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 211,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "856:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 213,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 212,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "865:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "856:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 145,
															"src": "856:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "856:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "840:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "840:41:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 220,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "901:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "901:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 222,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "913:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 223,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "918:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 219,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "892:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "892:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "EmitStatement",
												"src": "887:38:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "938:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 177,
												"id": 227,
												"nodeType": "Return",
												"src": "931:11:2"
											}
										]
									},
									"documentation": "@dev Transfer token for a specified address\n@param _to The address to transfer to.\n@param _value The amount to be transferred.",
									"id": 229,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "644:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "657:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:29:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "689:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "689:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "688:6:2"
									},
									"scope": 242,
									"src": "626:321:2",
									"stateMutability": "nonpayable",
									"superFunction": 308,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "1214:34:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 236,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "1227:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 238,
													"indexExpression": {
														"argumentTypes": null,
														"id": 237,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1236:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1227:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 235,
												"id": 239,
												"nodeType": "Return",
												"src": "1220:23:2"
											}
										]
									},
									"documentation": "@dev Gets the balance of the specified address.\n@param _owner The address to query the the balance of.\n@return An uint256 representing the amount owned by the passed address.",
									"id": 241,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1168:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1167:16:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1205:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1204:9:2"
									},
									"scope": 242,
									"src": "1149:99:2",
									"stateMutability": "view",
									"superFunction": 299,
									"visibility": "public"
								}
							],
							"scope": 243,
							"src": "180:1071:2"
						}
					],
					"src": "0:1252:2"
				},
				"id": 2
			},
			"zeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "zeppelin-solidity/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							285
						]
					},
					"id": 286,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"absolutePath": "zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
							"file": "./ERC20Basic.sol",
							"id": 245,
							"nodeType": "ImportDirective",
							"scope": 286,
							"sourceUnit": 318,
							"src": "26:26:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 246,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 317,
										"src": "162:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$317",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 247,
									"nodeType": "InheritanceSpecifier",
									"src": "162:10:3"
								}
							],
							"contractDependencies": [
								317
							],
							"contractKind": "contract",
							"documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
							"fullyImplemented": false,
							"id": 285,
							"linearizedBaseContracts": [
								285,
								317
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 256,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "196:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "212:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "195:34:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "255:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "254:9:3"
									},
									"scope": 285,
									"src": "177:87:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 267,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "290:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "305:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "318:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "289:44:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "354:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "354:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "353:6:3"
									},
									"scope": 285,
									"src": "268:92:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 276,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "381:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "399:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "380:34:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "431:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "431:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "430:6:3"
									},
									"scope": 285,
									"src": "364:73:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 284,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "460:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "487:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "516:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "454:79:3"
									},
									"src": "440:94:3"
								}
							],
							"scope": 286,
							"src": "144:392:3"
						}
					],
					"src": "0:537:3"
				},
				"id": 3
			},
			"zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
				"ast": {
					"absolutePath": "zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
					"exportedSymbols": {
						"ERC20Basic": [
							317
						]
					},
					"id": 318,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 287,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\nSee https://github.com/ethereum/EIPs/issues/179",
							"fullyImplemented": false,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "ERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 292,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "194:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "218:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "217:9:4"
									},
									"scope": 317,
									"src": "174:53:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 299,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "249:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "248:14:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "284:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "283:9:4"
									},
									"scope": 317,
									"src": "230:63:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 308,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "314:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "327:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "313:29:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "359:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 305,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "359:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "358:6:4"
									},
									"scope": 317,
									"src": "296:69:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 316,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "383:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "405:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "425:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "382:57:4"
									},
									"src": "368:72:4"
								}
							],
							"scope": 318,
							"src": "150:292:4"
						}
					],
					"src": "0:443:4"
				},
				"id": 4
			},
			"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol": {
				"ast": {
					"absolutePath": "zeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
					"exportedSymbols": {
						"StandardToken": [
							564
						]
					},
					"id": 565,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 319,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:5"
						},
						{
							"absolutePath": "zeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
							"file": "./BasicToken.sol",
							"id": 320,
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 243,
							"src": "26:26:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "zeppelin-solidity/contracts/token/ERC20/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 321,
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 286,
							"src": "53:21:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 322,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 285,
										"src": "360:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$285",
											"typeString": "contract ERC20"
										}
									},
									"id": 323,
									"nodeType": "InheritanceSpecifier",
									"src": "360:5:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 324,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 242,
										"src": "367:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$242",
											"typeString": "contract BasicToken"
										}
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "367:10:5"
								}
							],
							"contractDependencies": [
								242,
								285,
								317
							],
							"contractKind": "contract",
							"documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\nhttps://github.com/ethereum/EIPs/issues/20\nBased on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
							"fullyImplemented": true,
							"id": 564,
							"linearizedBaseContracts": [
								564,
								242,
								285,
								317
							],
							"name": "StandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 331,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 564,
									"src": "383:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 330,
										"keyType": {
											"id": 326,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "392:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "383:49:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 329,
											"keyType": {
												"id": 327,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "412:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "403:28:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 328,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "423:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "840:356:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 343,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "854:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 344,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "864:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 346,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 345,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "873:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "864:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "854:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															582,
															583
														],
														"referencedDeclaration": 582,
														"src": "846:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "846:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "846:34:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 351,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "894:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 352,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "904:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 354,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 353,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "912:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "904:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 357,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 355,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "919:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "919:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "904:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "894:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															582,
															583
														],
														"referencedDeclaration": 582,
														"src": "886:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "886:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "886:45:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 362,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "945:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "960:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "952:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "952:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "945:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															582,
															583
														],
														"referencedDeclaration": 582,
														"src": "937:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "937:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "937:26:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 369,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "970:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 371,
														"indexExpression": {
															"argumentTypes": null,
															"id": 370,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "979:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "970:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 376,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "1008:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 372,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "988:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 374,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 373,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "997:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "988:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 121,
															"src": "988:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "988:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "970:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "970:45:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1021:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 382,
														"indexExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1030:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1021:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 387,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "1055:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 383,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "1037:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 385,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "1046:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1037:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 145,
															"src": "1037:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1037:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1021:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "1021:41:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 391,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "1068:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 395,
															"indexExpression": {
																"argumentTypes": null,
																"id": 392,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "1076:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1068:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 396,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 393,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "1083:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1083:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1068:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 404,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "1128:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 397,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "1097:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 399,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 398,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "1105:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1097:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 402,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 400,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "1112:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1112:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1097:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 121,
															"src": "1097:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1097:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1068:67:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "1068:67:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 409,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "1155:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 410,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1162:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 411,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1167:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 408,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "1146:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1146:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "EmitStatement",
												"src": "1141:33:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1187:4:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 341,
												"id": 415,
												"nodeType": "Return",
												"src": "1180:11:5"
											}
										]
									},
									"documentation": "@dev Transfer tokens from one address to another\n@param _from address The address which you want to send tokens from\n@param _to address The address which you want to transfer to\n@param _value uint256 the amount of tokens to be transferred",
									"id": 417,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "753:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "772:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "789:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "789:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "747:60:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "832:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "832:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "831:6:5"
									},
									"scope": 564,
									"src": "726:470:5",
									"stateMutability": "nonpayable",
									"superFunction": 267,
									"visibility": "public"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1887:115:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 426,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "1893:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 430,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 427,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "1901:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1901:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1893:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 431,
														"indexExpression": {
															"argumentTypes": null,
															"id": 429,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "1913:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1893:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 432,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "1925:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1893:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1893:38:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 436,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "1951:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1951:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 438,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "1963:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 439,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "1973:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 435,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1942:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "EmitStatement",
												"src": "1937:43:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1993:4:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 425,
												"id": 443,
												"nodeType": "Return",
												"src": "1986:11:5"
											}
										]
									},
									"documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\nBeware that changing an allowance with this method brings the risk that someone may use both the old\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.",
									"id": 445,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1831:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1849:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1830:34:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1881:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1881:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1880:6:5"
									},
									"scope": 564,
									"src": "1814:188:5",
									"stateMutability": "nonpayable",
									"superFunction": 276,
									"visibility": "public"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "2431:43:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 454,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2444:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 456,
														"indexExpression": {
															"argumentTypes": null,
															"id": 455,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2452:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2444:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 458,
													"indexExpression": {
														"argumentTypes": null,
														"id": 457,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2460:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2444:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 459,
												"nodeType": "Return",
												"src": "2437:32:5"
											}
										]
									},
									"documentation": "@dev Function to check the amount of tokens that an owner allowed to a spender.\n@param _owner address The address which owns the funds.\n@param _spender address The address which will spend the funds.\n@return A uint256 specifying the amount of tokens still available for the spender.",
									"id": 461,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2345:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2365:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2365:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2339:47:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2420:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2420:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2419:9:5"
									},
									"scope": 564,
									"src": "2321:153:5",
									"stateMutability": "view",
									"superFunction": 256,
									"visibility": "public"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "3035:187:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 470,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "3041:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 474,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 471,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "3049:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3049:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3041:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 475,
														"indexExpression": {
															"argumentTypes": null,
															"id": 473,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3061:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3041:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 483,
																		"name": "_addedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "3115:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 476,
																				"name": "allowed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "3081:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 479,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 477,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 579,
																					"src": "3089:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3089:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3081:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 481,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 480,
																			"name": "_spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "3101:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3081:29:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "3081:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3081:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 485,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3073:55:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3041:87:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "3041:87:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 489,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "3148:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3148:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 491,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3160:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 492,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "3170:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 495,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 493,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "3178:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3178:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3170:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 497,
															"indexExpression": {
																"argumentTypes": null,
																"id": 496,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "3190:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3170:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 488,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "3139:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:61:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "EmitStatement",
												"src": "3134:66:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3213:4:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 469,
												"id": 501,
												"nodeType": "Return",
												"src": "3206:11:5"
											}
										]
									},
									"documentation": "@dev Increase the amount of tokens that an owner allowed to a spender.\napprove should be called when allowed[_spender] == 0. To increment\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\n@param _spender The address which will spend the funds.\n@param _addedValue The amount of tokens to increase the allowance by.",
									"id": 503,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "increaseApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2957:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"name": "_addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2979:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2979:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2951:51:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "3027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3026:6:5"
									},
									"scope": 564,
									"src": "2926:296:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "3793:318:5",
										"statements": [
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"name": "oldValue",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "3799:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3799:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 520,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 514,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3818:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 517,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 515,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "3826:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3826:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3818:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 519,
													"indexExpression": {
														"argumentTypes": null,
														"id": 518,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "3838:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3818:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:48:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 521,
														"name": "_subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "3857:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 522,
														"name": "oldValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "3877:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3857:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 546,
													"nodeType": "Block",
													"src": "3941:77:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 534,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "3949:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 538,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 535,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 579,
																				"src": "3957:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3957:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3949:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 539,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 537,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "3969:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3949:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 542,
																			"name": "_subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 507,
																			"src": "3994:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 540,
																			"name": "oldValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 513,
																			"src": "3981:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 121,
																		"src": "3981:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3981:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3949:62:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 545,
															"nodeType": "ExpressionStatement",
															"src": "3949:62:5"
														}
													]
												},
												"id": 547,
												"nodeType": "IfStatement",
												"src": "3853:165:5",
												"trueBody": {
													"id": 533,
													"nodeType": "Block",
													"src": "3887:48:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 524,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "3895:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 528,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 525,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 579,
																				"src": "3903:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3903:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3895:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 529,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 527,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "3915:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3895:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3927:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3895:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 532,
															"nodeType": "ExpressionStatement",
															"src": "3895:33:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 549,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "4037:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4037:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 551,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "4049:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 552,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4059:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 555,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 553,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "4067:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4067:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4059:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 557,
															"indexExpression": {
																"argumentTypes": null,
																"id": 556,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "4079:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4059:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 548,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "4028:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4028:61:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "EmitStatement",
												"src": "4023:66:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4102:4:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 511,
												"id": 561,
												"nodeType": "Return",
												"src": "4095:11:5"
											}
										]
									},
									"documentation": "@dev Decrease the amount of tokens that an owner allowed to a spender.\napprove should be called when allowed[_spender] == 0. To decrement\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\n@param _spender The address which will spend the funds.\n@param _subtractedValue The amount of tokens to decrease the allowance by.",
									"id": 563,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "decreaseApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3710:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"name": "_subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3732:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3732:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3704:56:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3785:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3785:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3784:6:5"
									},
									"scope": 564,
									"src": "3679:432:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 565,
							"src": "334:3780:5"
						}
					],
					"src": "0:4115:5"
				},
				"id": 5
			}
		}
	}
}